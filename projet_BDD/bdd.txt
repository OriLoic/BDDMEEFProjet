-- Création de la base de données
CREATE DATABASE IF NOT EXISTS projet_BD;
USE projet_BD;

-- Table des clients
CREATE TABLE IF NOT EXISTS clients (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    numerosCartes VARCHAR(255) -- Liste des numéros de cartes sous forme de chaîne
);

-- Table des cartes d'abonnement
CREATE TABLE IF NOT EXISTS carte_abonnement (
    id INT AUTO_INCREMENT PRIMARY KEY,
    numeroCarte INT UNIQUE NOT NULL,  -- Le numéro de carte d'abonnement
    solde FLOAT NOT NULL DEFAULT 0.0,
    nbFilmsLoues INT NOT NULL DEFAULT 0
);

-- Table pour lier un client à une carte d'abonnement
CREATE TABLE IF NOT EXISTS client_carte_abonnement (
    clientId INT,
    carteId INT,
    PRIMARY KEY (clientId, carteId),
    FOREIGN KEY (clientId) REFERENCES clients(id) ON DELETE CASCADE,
    FOREIGN KEY (carteId) REFERENCES carte_abonnement(id) ON DELETE CASCADE
);

-- Table des films
CREATE TABLE IF NOT EXISTS films (
    idFilm INT AUTO_INCREMENT PRIMARY KEY,
    titre VARCHAR(255) NOT NULL,
    realisateur VARCHAR(255),
    theme VARCHAR(255),
    dateSortie DATE,
    noteFilm INT,
    supportDisponible SET('BLU_RAY', 'DEMATERIALISE') NOT NULL
);

-- Table des locations avec carte de crédit
CREATE TABLE IF NOT EXISTS location_carte_credit (
    id INT AUTO_INCREMENT PRIMARY KEY,
    clientId INT,
    filmId INT,
    supportLocation ENUM('BLU_RAY', 'DEMATERIALISE') NOT NULL,
    dureeLocation INT NOT NULL,
    dateLocation DATE NOT NULL,
    FOREIGN KEY (clientId) REFERENCES clients(id) ON DELETE CASCADE,
    FOREIGN KEY (filmId) REFERENCES films(idFilm) ON DELETE CASCADE
);

-- Table des locations avec carte d'abonnement
CREATE TABLE IF NOT EXISTS location_abonne (
    id INT AUTO_INCREMENT PRIMARY KEY,
    carteId INT,
    filmId INT,
    supportLocation ENUM('BLU_RAY', 'DEMATERIALISE') NOT NULL,
    dureeLocation INT NOT NULL,
    dateLocation DATE NOT NULL,
    FOREIGN KEY (carteId) REFERENCES carte_abonnement(id) ON DELETE CASCADE,
    FOREIGN KEY (filmId) REFERENCES films(idFilm) ON DELETE CASCADE
);

-- Table des catégories
CREATE TABLE IF NOT EXISTS categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(255) NOT NULL UNIQUE
);

-- Lien entre films et catégories
CREATE TABLE IF NOT EXISTS film_categories (
    filmId INT,
    categorieId INT,
    PRIMARY KEY (filmId, categorieId),
    FOREIGN KEY (filmId) REFERENCES films(idFilm) ON DELETE CASCADE,
    FOREIGN KEY (categorieId) REFERENCES categories(id) ON DELETE CASCADE
);

-- Insertion des clients (avec plusieurs numéros de cartes sous forme de chaîne)
INSERT INTO clients (nom, numerosCartes) VALUES
('Alice Martin', '1001'),
('Bob Dupont', '1002,1003');  -- Bob a 2 numéros de cartes

-- Insertion d'une carte d'abonnement pour Bob Dupont (numéro de carte 1003)
INSERT INTO carte_abonnement (numeroCarte, solde, nbFilmsLoues) VALUES
(1003, 50.0, 0);

-- Lien entre Bob Dupont et sa carte d'abonnement (carte numéro 1003)
INSERT INTO client_carte_abonnement (clientId, carteId)
VALUES ((SELECT id FROM clients WHERE numerosCartes LIKE '%1002%'), (SELECT id FROM carte_abonnement WHERE numeroCarte = 1003));

-- Insertion des films
INSERT INTO films (titre, realisateur, theme, dateSortie, noteFilm, supportDisponible) VALUES
('Inception', 'Christopher Nolan', 'Science Fiction', '2010-07-16', 9, 'BLU_RAY,DEMATERIALISE'),
('Titanic', 'James Cameron', 'Romance', '1997-12-19', 8, 'BLU_RAY'),
('The Matrix', 'The Wachowskis', 'Action', '1999-03-31', 10, 'BLU_RAY,DEMATERIALISE'),
('Avengers: Endgame', 'Anthony and Joe Russo', 'Superhero', '2019-04-26', 9, 'DEMATERIALISE'),
('The Godfather', 'Francis Ford Coppola', 'Crime', '1972-03-24', 10, 'BLU_RAY,DEMATERIALISE'),
('Interstellar', 'Christopher Nolan', 'Science Fiction', '2014-11-07', 9, 'BLU_RAY');

-- Insertion des catégories
INSERT INTO categories (nom) VALUES
('Science Fiction'),
('Romance'),
('Action'),
('Crime'),
('Superhero');

-- Lien entre films et catégories
INSERT INTO film_categories (filmId, categorieId) VALUES
((SELECT idFilm FROM films WHERE titre = 'Inception'), (SELECT id FROM categories WHERE nom = 'Science Fiction')),
((SELECT idFilm FROM films WHERE titre = 'Titanic'), (SELECT id FROM categories WHERE nom = 'Romance')),
((SELECT idFilm FROM films WHERE titre = 'The Matrix'), (SELECT id FROM categories WHERE nom = 'Action')),
((SELECT idFilm FROM films WHERE titre = 'The Godfather'), (SELECT id FROM categories WHERE nom = 'Crime')),
((SELECT idFilm FROM films WHERE titre = 'Avengers: Endgame'), (SELECT id FROM categories WHERE nom = 'Superhero'));

-- Insertion des locations avec carte de crédit pour Alice
INSERT INTO location_carte_credit (clientId, filmId, supportLocation, dureeLocation, dateLocation)
VALUES ((SELECT id FROM clients WHERE numerosCartes LIKE '%1001%'), (SELECT idFilm FROM films WHERE titre = 'Inception'), 'DEMATERIALISE', 3, CURDATE());

-- Insertion des locations avec carte d'abonnement pour Bob
INSERT INTO location_abonne (carteId, filmId, supportLocation, dureeLocation, dateLocation)
VALUES ((SELECT carteId FROM client_carte_abonnement WHERE clientId = (SELECT id FROM clients WHERE numerosCartes LIKE '%1002%')),
        (SELECT idFilm FROM films WHERE titre = 'The Matrix'),
        'BLU_RAY', 5, CURDATE());

-- Insertion d'une nouvelle location avec carte de crédit pour Alice
INSERT INTO location_carte_credit (clientId, filmId, supportLocation, dureeLocation, dateLocation)
VALUES ((SELECT id FROM clients WHERE numerosCartes LIKE '%1001%'), 
        (SELECT idFilm FROM films WHERE titre = 'The Godfather'), 
        'BLU_RAY', 
        7, 
        CURDATE());  -- Ajout de CURDATE() pour la date de location

-- Insertion d'une nouvelle location avec carte d'abonnement pour Bob
INSERT INTO location_abonne (carteId, filmId, supportLocation, dureeLocation, dateLocation)
VALUES ((SELECT carteId FROM client_carte_abonnement WHERE clientId = (SELECT id FROM clients WHERE numerosCartes LIKE '%1002%')),
        (SELECT idFilm FROM films WHERE titre = 'Interstellar'),
        'DEMATERIALISE', 
        4, 
        CURDATE());  -- Ajout de CURDATE() pour la date de location

-- Mise à jour du solde de Bob après sa location
UPDATE carte_abonnement
SET solde = solde - 4.0,
    nbFilmsLoues = nbFilmsLoues + 1
WHERE id = (SELECT carteId FROM client_carte_abonnement WHERE clientId = (SELECT id FROM clients WHERE numerosCartes LIKE '%1002%'));
